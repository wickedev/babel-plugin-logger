import { NodePath } from '@babel/traverse';
import { ArrowFunctionExpression, ClassMethod, FunctionDeclaration } from '@babel/types';
import { FileData, FunctionData, Optional } from '~/model';
export declare function getArrowFunctionName(path: NodePath<ArrowFunctionExpression>): string;
export declare function getClassMethodName(path: NodePath<ClassMethod>): string;
export declare function getFunctionDeclarationName(path: NodePath<FunctionDeclaration>): string;
export declare function getParamNames(path: NodePath<any>): string[];
export declare function argsFormatter(args: string[]): string;
export declare function insertLogAtFirst(path: NodePath, data: FunctionData): void;
export declare function getFileData(path: NodePath, state: any): Optional<FileData>;
